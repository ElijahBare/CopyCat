on:
  push:
    branches:
      - '**'
  pull_request:
    paths:
      - Cargo.toml
      - Cargo.lock
      - lapce-**

name: CI

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

jobs:
  build:
    name: Rust on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Update toolchain & add llvm-tools
        run: rustup update --no-self-update

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Fetch dependencies
        run: cargo fetch --locked

      - name: Build debug
        run: cargo build --frozen

      - name: Run doc tests
        run: cargo test --doc --workspace

      - name: Build release
        run: cargo build --release --frozen

      - name: Upload release artifact for Windows
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: binary-windows
          path: target/release/copycat.exe

      - name: Upload release artifact for macOS
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: binary-macos
          path: target/release/copycat

  clippy:
    name: Clippy on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Update toolchain & add clippy
        run: |
          rustup update --no-self-update
          rustup component add clippy

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Fetch dependencies
        run: cargo fetch --locked

      - name: Run clippy
        run: cargo clippy

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref }}
          files: release-artifacts/**/*
